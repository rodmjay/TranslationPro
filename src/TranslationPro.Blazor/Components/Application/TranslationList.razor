@using TranslationPro.Shared.Interfaces
@using TranslationPro.Shared.Models


@if (ApplicationPhrase == null)
{
    <Paragraph>Loading Translations...</Paragraph>
}
else
{
    <Card Margin="Margin.Is5.FromBottom">
        <Translation Language="English" Text="@ApplicationPhrase.Text"></Translation>
    </Card>


    <DataGrid TItem="ApplicationTranslationOutput" Data="@ApplicationPhrase.Translations" PageSize="@ApplicationPhrase.TranslationCount" RowClicked="RowClicked" TotalItems="@ApplicationPhrase.TranslationCount" >
        <DataGridColumns>
            <DataGridColumn Field="@nameof(ApplicationTranslationOutput.Text)" Caption="Text"></DataGridColumn>
            <DataGridColumn Field="@nameof(ApplicationTranslationOutput.LanguageName)" Caption="Language"></DataGridColumn>
            <DataGridColumn Field="@nameof(ApplicationTranslationOutput.MachineTranslations)" Caption="Translations"></DataGridColumn>
        </DataGridColumns>
    </DataGrid>
}


@code {

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Parameter]
    public Guid ApplicationId { get; set; }

    [Parameter]
    public int PhraseId { get; set; }

    [Inject]
    public IApplicationPhrasesController ApplicationPhrasesController { get; set; }

    public ApplicationPhraseDetails ApplicationPhrase { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ApplicationPhrase = await ApplicationPhrasesController.GetPhraseAsync(ApplicationId, PhraseId);
    }

    public void RowClicked(DataGridRowMouseEventArgs<ApplicationTranslationOutput> evnt)
    {
        NavigationManager.NavigateTo($"/applications/{ApplicationId}/phrases/{PhraseId}/languages/{evnt.Item.LanguageId}");
    }

}
