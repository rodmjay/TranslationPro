
<DropdownList TItem="LanguageOutput" TValue="string" Data="@Languages"
              TextField="@((item) => item.Name)"
              ValueField="@((item) => item.Id)"
              SelectionMode="DropdownListSelectionMode.Checkbox"
              SelectedValues="SelectedLanguages"
              SelectedValuesChanged="ValuesChanged"
              Color="Color.Primary"
              MaxMenuHeight="200px"
              Disabled="@Disabled">
    
    Select Languages  @if (SelectedLanguages.Count > 0)
                      {
                         <Span>(@SelectedLanguages.Count)</Span> 
                      }

</DropdownList>

@code
{
    [Parameter]
    public List<string> SelectedLanguages { get; set; } = new();

    [Parameter]
    public EventCallback<IReadOnlyList<string>> LanguagesChanged { get; set; }


    [Parameter]
    public bool Disabled { get; set; } = false;

    [Inject]
    public ILanguagesController LanguagesController { get; set; }

    public IEnumerable<LanguageOutput> Languages { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Languages = await LanguagesController.GetLanguagesAsync();
    }

    private async Task ValuesChanged(IReadOnlyList<string> selectedLanguages)
    {
        await LanguagesChanged.InvokeAsync(selectedLanguages.ToList());
    }
}
