
@if (Data != null)
{



    <Table>
        <TableHeader>
            <TableRow>
                <TableHeaderCell>Date</TableHeaderCell>
                <TableHeaderCell>Input Data</TableHeaderCell>
                <TableHeaderCell>Output Data</TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            <Repeater TItem="KeyValuePair<DateTime, ConsumptionInfo>" Items="Data">
        
                <TableRow>
                    <TableRowCell>
                        @context.Key.ToShortDateString()
                    </TableRowCell>
                    <TableRowCell>
                        @context.Value.InputCharacters
                    </TableRowCell>
                    <TableRowCell>
                        @context.Value.OutputCharacters
                    </TableRowCell>
                </TableRow>

            </Repeater>
        </TableBody>
  

    </Table>
}


@code {
    
    [Parameter]
    public Guid ApplicationId { get; set; }

    [Inject]
    public IApplicationConsumptionController ConsumptionService { get; set; }

    private Dictionary<DateTime, ConsumptionInfo> Data { get; set; }

    private BarChartDataset<int> GetBarChartDataset()
    {
        return new() {Label = "Consumption"};
    }

    protected override async Task OnInitializedAsync()
    {
        Data = await ConsumptionService.GetConsumptionInfo(ApplicationId, null, null);
        Data = Data.NormalizeDates();
    }

}
