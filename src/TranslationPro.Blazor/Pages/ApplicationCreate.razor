@page "/create-application"
@using TranslationPro.Blazor.Events
@inherits AuthenticatedBase
@layout MainLayout

<Bar>
    <BarStart>
        <ApplicationBreadcrumb NavigationItems="@NavigationItems"></ApplicationBreadcrumb>
    </BarStart>
       
</Bar>
@if (Languages != null)
{
    
    <Row>
        <Column ColumnSize="ColumnSize.Is6.OnDesktop">
            <Card Margin="Margin.Is4.FromBottom">
                <CardHeader>
                    <CardTitle>Create New Application</CardTitle>
                </CardHeader>
                <CardBody>
                    <Validations @ref="validationsBasicExampleRef" Mode="ValidationMode.Auto" ValidateOnLoad="false">
                        <Validation Validator="@ValidationRule.IsNotEmpty">
                            <Field>
                                <FieldLabel>Application Name</FieldLabel>
                                <TextEdit @bind-Text="@Input.Name" Placeholder="Enter application Name" />
                            </Field>
                        </Validation>
                        
                        <Field>
                           <LanguageDropdown LanguagesChanged="LanguagesChanged"></LanguageDropdown>
                        </Field>
                        <Button Color="Color.Primary" Clicked="HandleSubmit">Submit</Button>
                    </Validations>
                
                </CardBody>
            </Card>
        </Column>
    </Row>
}

@code {
    Validations? validationsBasicExampleRef;

    [Inject]
    public ILanguagesController LanguagesController { get; set; }

    public ApplicationCreateOptions Input { get; set; } = new()
    {
        Languages = new List<string>()
    };
         
    private List<LanguageOutput> Languages { get; set; }

    protected override async Task LoadData()
    {
        await base.LoadData();

        Languages = await LanguagesController.GetLanguagesAsync();

        NavigationItems.Add(new NavigationItem()
        {
            Title = "Create Application"
        });
    }
    
    private async Task HandleSubmit(MouseEventArgs evnt)
    {
        if (await validationsBasicExampleRef!.ValidateAll())
        {
            await validationsBasicExampleRef.ClearAll();

            var result = await ApplicationService.CreateApplicationAsync(Input);

            if (result.Succeeded)
            {
                await EventAggregator.PublishAsync(new ApplicationCreatedEvent(Guid.Parse(result.Id.ToString())));

                NavigationManager.NavigateTo($"/applications/{result.Id}");
            }
        }
    }

    private void LanguagesChanged(IReadOnlyList<string> languages)
    {
        Input.Languages = languages.ToArray();
    }

}